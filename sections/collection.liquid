{% assign products_per_page = section.settings.products_per_row | times: section.settings.number_of_rows %}

{% assign use_masonry = false %}
{% if section.settings.layout == 'masonry' %}
  {% assign use_masonry = true %}
{% endif %}

{% assign show_filters = false %}
{% if section.settings.show_filters %}
  {% assign show_filters = true %}
{% endif %}

{% assign show_sorting = false %}
{% if section.settings.sorting %}
  {% assign show_sorting = true %}
{% endif %}

{% assign show_collection_image = false %}
{% if collection.image and section.settings.show_collection_image %}
  {% assign show_collection_image = true %}
{% endif %}

<script
  type="application/json"
  data-section-id="{{ section.id }}"
  data-section-type="static-collection"
>
</script>


<div>
  {% unless use_masonry %}
    <h1 class="page-title">{{ collection.title }}</h1>
    {% render 'breadcrumbs' %}
  {% endunless %}

  {% paginate collection.products by products_per_page %}

  <section
    class="collection collection-image--{{ show_collection_image }}"
    data-product-hover="{{ section.settings.product-hover }}"
    {% if use_masonry %}data-collection-masonry{% endif %}
    data-section-id="{{ section.id }}"
    data-section-type="collection">

    {% if use_masonry or show_collection_image or collection.description != blank or show_sorting or show_filters %}
      <div
        class="
        collection-header
        {% if use_masonry %}
          collection-header-alternate
        {% endif %}
        {% if show_filters and show_sorting %}
          collection-header--filters-sort-enabled
        {% endif %}
        "
        >

        {% if show_collection_image %}
          <div class="collection-featured-image">
            {%
              render 'rimg',
              img: collection.image,
              size: '1024x1024',
              lazy: true
            %}
          </div>
        {% endif %}

        <div class="collection-header-content">
          {% if use_masonry %}
            {% render 'breadcrumbs' %}
            <h1 class="page-title">{{ collection.title }}</h1>
          {% endif %}

          {% if collection.description != blank and section.settings.show_description %}
            <div class="collection-description rte">
              {{ collection.description }}
            </div>
          {% endif %}

          {% if show_filters or show_sorting %}
            <div class="collection-filters">
              {% if show_filters and collection.filters.size > 0 %}
                <div class="faceted-filters" data-faceted-filter>
                  {%
                    render "faceted-filters",
                    filters: collection.filters,
                    class_prefix: 'collection'
                  %}
                </div>
              {% endif %}
              {% if show_sorting %}
                <div class="collection-sorting__wrapper">
                  <div class="collection-filters__title">
                      {{ 'collections.collection.sort_title' | t }}:
                  </div>
                  <div class="collection-dropdown collection-dropdown--sort select-wrapper {% if collection.current_vendor %}vendor-collection{% endif %}">

                    {% assign current_sort = collection.sort_by | default: collection.default_sort_by %}

                    <span class="selected-text"></span>
                    <select data-collection-sorting>
                      {%- for option in collection.sort_options -%}
                        {% if current_sort == option.value %}
                          <option value="{{ option.value }}" selected="selected">{{ option.name }}</option>
                        {% else %}
                          <option value="{{ option.value }}">{{ option.name }}</option>
                        {% endif %}
                      {% endfor %}
                    </select>
                  </div>
                </div>
              {% endif %}
            </div>
          {% endif %}
        </div>

        {% if show_filters and collection.filters.size > 0 %}
          {% for filter in collection.filters %}
            {% if filter.active_values.size > 0 or filter.min_value.value or filter.max_value.value %}
                {%-
                  render 'faceted-filters-active',
                  show_sorting: show_sorting,
                  filter: filter,
                  filters: collection.filters,
                  class_prefix: 'collection',
                  clear_url: collection.url
                %}
              {% break %}
            {% endif %}
          {% endfor %}
        {% endif %}

      </div>
    {% endif %}

    <div
      class="collection-products rows-of-{{ section.settings.products_per_row }}"
      {% if use_masonry %}data-masonry-grid{% endif %}
    >
      {%- if use_masonry -%}
        <div class="product-grid-masonry-sizer" data-masonry-sizer></div>
      {%- endif -%}

      {%- if collection.handle == 'all' and collection.all_vendors.size == 0 and collection.all_types.size == 0 -%}
        {%- for i in (1..section.settings.products_per_row) -%}
          {%- capture productImage -%}
            {%- cycle 'product-1', 'product-2', 'product-3' -%}
          {%- endcapture -%}
          {%- assign image = productImage | placeholder_svg_tag: 'placeholder-svg' -%}

          {%- render 'home-onboard-product', image: image -%}
        {%- endfor -%}
      {%- else -%}
        {% for product in collection.products %}
          {%- assign product_hover = section.settings.product-hover -%}
          {%- assign product_stock_level_threshold = section.settings.product_stock_level_threshold -%}
          {%- assign product_badges = section.settings.product-badges -%}
          {%- assign product_icons = section.settings.product-badges-icons -%}
          {%- assign product_vendor = settings.show_vendor -%}

          {%
            render 'product-list-item',
            product: product,
            product_hover: product_hover,
            product_stock_level_threshold: product_stock_level_threshold,
            product_badges: product_badges,
            product_icons: product_icons,
            product_vendor: product_vendor,
          %}
        {% else %}
          <p class="empty">{{ 'collections.collection.empty' | t }}</p>
        {% endfor %}
      {%- endif -%}
    </div>

  </section>

  {% render 'pagination', paginate: paginate %}

  {% endpaginate %}
</div>

{% schema %}
{
  "name": "Collection pages",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_collection_image",
      "label": "Show collection image"
    },
    {
      "type": "checkbox",
      "id": "show_description",
      "label": "Show description"
    },
    {
      "type": "checkbox",
      "id": "sorting",
      "label": "Enable sorting",
      "info": "Parameters include: best selling, A-Z, newest to oldest, etc."
    },
    {
      "type": "checkbox",
      "id": "show_filters",
      "label": "Enable filtering",
      "default": true
    },
    {
      "type": "select",
      "id": "layout",
      "label": "Layout",
      "options": [
        {
          "value": "default",
          "label": "Default"
        },
        {
          "value": "masonry",
          "label": "Masonry"
        }
      ],
      "default": "default"
    },
    {
      "type": "range",
      "id": "products_per_row",
      "label": "Products per row",
      "min": 2,
      "max": 4,
      "step": 1,
      "default": 3
    },
    {
      "type": "range",
      "id": "number_of_rows",
      "label": "Rows",
      "min": 1,
      "max": 12,
      "step": 1,
      "default": 3
    },
    {
      "type": "header",
      "content": "Product item"
    },
    {
      "type": "select",
      "id": "product-hover",
      "label": "Overlay / hover interaction",
      "options": [
        {
          "value": "quick-shop",
          "label": "Quick shop"
        },
        {
          "value": "image-flip",
          "label": "Secondary image"
        },
        {
          "value": "stock-level",
          "label": "Stock level indicator"
        },
        {
          "value": "none",
          "label": "None"
        }
      ]
    },
    {
      "type": "range",
      "id": "product_stock_level_threshold",
      "label": "Show warning when stock is equal to or less than:",
      "min": 1,
      "max": 10,
      "step": 1,
      "default": 5
    },
    {
      "type": "checkbox",
      "id": "product-badges",
      "label": "Show 'on sale' \/ 'sold out' badges"
    },
    {
      "type": "checkbox",
      "id": "product-badges-icons",
      "label": "Use icons for 'on sale' \/ 'sold out' badges"
    }
  ]
}

{% endschema %}